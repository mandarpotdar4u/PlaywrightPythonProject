{"name": "test_valid_login_data_from_excel[visual_user-secret_sauce]", "status": "broken", "statusDetails": {"message": "TypeError: expected string or bytes-like object, got 'list'", "trace": "initialize_driver = <Page url='https://www.saucedemo.com/inventory.html'>, username = 'visual_user', password = 'secret_sauce'\n\n    @pytest.mark.parametrize(\"username,password\",\n                             excel_reader.get_valid_login_data_from_excel('excel_fIles/testfile.xlsx', 'LoginTest'))\n    def test_valid_login_data_from_excel(initialize_driver, username, password):\n        page = initialize_driver\n        login_page = LoginPage(page)\n    \n        print(\"Logged in using username: \" + username + \" and password: \" + password)\n    \n        login_page.enter_username(username)\n        time.sleep(2)\n        login_page.enter_password(password)\n        # login_page.click_rememberme_button()\n        time.sleep(2)\n        login_page.click_Login_button()\n        time.sleep(5)\n    \n        # Assertion validation through Excel Sheet\n        actual_title = page.title()\n        print('Page Excel Title:', actual_title)\n        excel_Expected = excel_reader.get_valid_Page_Title_assertion_from_excel('excel_fIles/testfile.xlsx', 'LoginTest')\n>       patn = re.sub(r\"[\\([{})\\]]\", \"\", excel_Expected)\n\ntests\\test_loging_using_excel.py:28: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\npattern = '[\\\\([{})\\\\]]', repl = '', string = [['Swag', 'Labs']], count = 0, flags = 0\n\n    def sub(pattern, repl, string, count=0, flags=0):\n        \"\"\"Return the string obtained by replacing the leftmost\n        non-overlapping occurrences of the pattern in string by the\n        replacement repl.  repl can be either a string or a callable;\n        if a string, backslash escapes in it are processed.  If it is\n        a callable, it's passed the Match object and must return\n        a replacement string to be used.\"\"\"\n>       return _compile(pattern, flags).sub(repl, string, count)\nE       TypeError: expected string or bytes-like object, got 'list'\n\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\re\\__init__.py:186: TypeError"}, "attachments": [{"name": "log", "source": "2468cfb7-1826-449b-8330-eae71b33235e-attachment.txt", "type": "text/plain"}, {"name": "stdout", "source": "4869fd5b-4d28-417a-8aa6-b662706d69e7-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "username", "value": "'visual_user'"}, {"name": "password", "value": "'secret_sauce'"}], "start": 1724914084018, "stop": 1724914098267, "uuid": "f967a3e0-bc77-419f-8bce-a671f34ebcb6", "historyId": "a9a1e1bd1ab46664ab1856a70f73b331", "testCaseId": "b1d52b9a4eac761eb3f30c14b6dbdd21", "fullName": "tests.test_loging_using_excel#test_valid_login_data_from_excel", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_loging_using_excel"}, {"name": "host", "value": "NIT-LPT-R711"}, {"name": "thread", "value": "26368-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_loging_using_excel"}]}